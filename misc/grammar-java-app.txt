STATEMENT_GLOBAL -> FUNCTION_DEF STATEMENT_GLOBAL
STATEMENT_GLOBAL -> STATEMENT_LIST STATEMENT_GLOBAL
STATEMENT_GLOBAL -> eof

STATEMENT_LIST_NONEMPTY -> STATEMENT STATEMENT_LIST
STATEMENT_LIST -> STATEMENT STATEMENT_LIST
STATEMENT_LIST -> dedent

STATEMENT -> id = ASSIGN_RHS eol
STATEMENT -> ASSIGN_RHS eol

STATEMENT -> IF_CLAUSE
STATEMENT -> WHILE_CLAUSE
STATEMENT -> pass eol
STATEMENT -> RETURN_STATEMENT

ASSIGN_RHS -> id ( CALL_PARAM
ASSIGN_RHS -> EXPRESSION

IF_CLAUSE -> if EXPRESSION : eol indent STATEMENT_LIST_NONEMPTY else : eol indent STATEMENT_LIST_NONEMPTY

WHILE_CLAUSE -> while EXPRESSION : eol indent STATEMENT_LIST_NONEMPTY

FUNCTION_DEF -> def id ( DEF_PARAM_LIST ) : eol indent STATEMENT_LIST_NONEMPTY

FUNCTION_CALL -> function_id ( CALL_PARAM_LIST )

DEF_PARAM_LIST -> id DEF_PARAM_LIST_NEXT
DEF_PARAM_LIST -> )

DEF_PARAM_LIST_NEXT -> , id DEF_PARAM_LIST_NEXT
DEF_PARAM_LIST_NEXT -> )

CALL_PARAM_LIST -> CALL_ELEM CALL_PARAM_LIST_NEXT
CALL_PARAM_LIST -> )

CALL_PARAM_LIST_NEXT -> , CALL_ELEM CALL_PARAM_LIST_NEXT
CALL_PARAM_LIST_NEXT -> )

CALL_ELEM -> id
CALL_ELEM -> literal
CALL_ELEM -> none

RETURN_STATEMENT -> return RETURN_EXPRESSION
RETURN_EXPRESSION -> eol
RETURN_EXPRESSION -> EXPRESSION eol

EXPRESSION -> expr
