%token dedent def else eof eol expr pass id if indent literal none pass return while
%% /* LL(1) */
STATEMENT_GLOBAL : FUNCTION_DEF STATEMENT_GLOBAL
| STATEMENT_LIST_NONEMPTY STATEMENT_GLOBAL
|   eof ;

STATEMENT_LIST_NONEMPTY : STATEMENT STATEMENT_LIST ;

STATEMENT_LIST : STATEMENT STATEMENT_LIST
| dedent ;

STATEMENT : ASSIGN_RHS eol
| id "=" ASSIGN_RHS eol
| IF_CLAUSE eol
| WHILE_CLAUSE eol
| pass eol
| RETURN /* contains eol */ ;

ASSIGN_RHS : id "(" CALL_PARAM_LIST
| EXPRESSION ;

IF_CLAUSE : if EXPRESSION ":" eol indent STATEMENT_LIST_NONEMPTY else ":" eol indent STATEMENT_LIST_NONEMPTY ;

WHILE_CLAUSE : while EXPRESSION ":" eol indent STATEMENT_LIST_NONEMPTY ;

FUNCTION_DEF : def id "(" DEF_PARAM_LIST ":" eol indent STATEMENT_LIST_NONEMPTY ;

FUNCTION_CALL : id "(" CALL_PARAM_LIST eol ;

DEF_PARAM_LIST : id DEF_PARAM_LIST_NEXT
| ")" ;

DEF_PARAM_LIST_NEXT : "," id DEF_PARAM_LIST_NEXT
| ")" ;

CALL_PARAM_LIST : CALL_ELEM CALL_PARAM_LIST_NEXT
| ")" ;

CALL_PARAM_LIST_NEXT : "," CALL_ELEM CALL_PARAM_LIST_NEXT
| ")" ;

CALL_ELEM : id
| literal
| none ;

RETURN : return RETURN_EXPRESSION ;

RETURN_EXPRESSION : eol
| EXPRESSION eol ;

EXPRESSION : expr ;
